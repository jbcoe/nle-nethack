[project]
name = "nle"
description = "The NetHack Learning Environment (NLE): a reinforcement learning environment based on NetHack"
readme = "README.md"
authors = [{ name = "The NLE Dev Team" }]
requires-python = "==3.10.*"
dynamic = ["version"]
classifiers = [
  "License :: OSI Approved :: Nethack General Public License",
  "Development Status :: 5 - Production/Stable",
  "Operating System :: POSIX :: Linux",
  "Operating System :: MacOS",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: C",
  "Programming Language :: C++",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Games/Entertainment",
]
dependencies = [
    "pybind11>=2.2",
    "numpy>=1.16",
    "gym>=0.15,<=0.23",
    "setuptools>=80.9.0",
]

[dependency-groups]
dev = [
  "black>=19.10b0",
  "cmake_format>=0.6.10",
  "flake8>=3.7",
  "flake8-bugbear>=20.1",
  "memory-profiler>=0.60.0",
  "pre-commit>=3.5.0",
  "pytest>=6.2.5",
  "pytest-benchmark>=3.4.1",
  "sphinx>=2.4.4",
  "sphinx-rtd-theme==0.4.3",
]

[project.license]
file = "LICENSE"

[project.urls]
Homepage = "https://github.com/NetHack-LE/nle"

[build-system]
requires = ["scikit-build-core>=0.10", "setuptools-scm"]
build-backend = "scikit_build_core.build"

[tool.scikit-build]
cmake.build-type = "Release"
cmake.args = ["-DHACKDIR=nle/nethackdir"]
minimum-version = "build-system.requires"
wheel.license-files = []

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.setuptools_scm"

[tool.setuptools_scm]
# This section is necessary to activate setuptools-scm, but can be empty

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | src
  | win/rl/nethack_rl
)/
'''

[tool.isort]
force_single_line = true
profile = "black"
skip_glob = "**/__init__.py"

[tool.pylint.messages_control]
disable = [
  "missing-class-docstring",
  "invalid-name",  # pylint is very strict.
  "missing-class-docstring",
  "missing-function-docstring",
  "missing-module-docstring",
  "c-extension-no-member",
  "no-member",  # too many false positives.
]
[tool.pylint.typecheck]
generated-members=["numpy.*", "torch.*", "nle._pynethack.*"]
[tool.pylint.design]
max-args=15  # Maximum number of arguments for function / method.
max-attributes=50  # Maximum number of attributes for a class (see R0902).
max-bool-expr=5  # Maximum number of boolean expressions in an if statement (see R0916).
max-branches=15  # Maximum number of branch for function / method body.
max-locals=30  # Maximum number of locals for function / method body.
